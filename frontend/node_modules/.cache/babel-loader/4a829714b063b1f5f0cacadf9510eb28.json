{"ast":null,"code":"import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartConstants';\nimport { ORDER_CREATE_FAIL, ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_MINE_LIST_REQUEST, ORDER_MINE_LIST_FAIL, ORDER_MINE_LIST_SUCCESS } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_CREATE_REQUEST,\n    payload: order\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/orders', order, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data.order\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsOrder = orderId => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_DETAILS_REQUEST,\n    payload: orderId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/orders/${orderId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrderMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: ORDER_MINE_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/orders/mine', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: ORDER_MINE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: ORDER_MINE_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["Axios","CART_EMPTY","ORDER_CREATE_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_MINE_LIST_REQUEST","ORDER_MINE_LIST_FAIL","ORDER_MINE_LIST_SUCCESS","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsOrder","orderId","get","listOrderMine"],"sources":["C:/Users/Franjo/Desktop/Comic Guide/frontend/src/actions/orderActions.js"],"sourcesContent":["import Axios from 'axios';\r\nimport { CART_EMPTY } from '../constants/cartConstants';\r\nimport {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_MINE_LIST_REQUEST,\r\n  ORDER_MINE_LIST_FAIL,\r\n  ORDER_MINE_LIST_SUCCESS,\r\n} from '../constants/orderConstants';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    const { data } = await Axios.post('/api/orders', order, {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    });\r\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: data.order });\r\n    dispatch({ type: CART_EMPTY });\r\n    localStorage.removeItem('cartItems');\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const detailsOrder = (orderId) => async (dispatch, getState) => {\r\n  dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.get(`/api/orders/${orderId}`, {\r\n      headers: { Authorization: `Bearer ${userInfo.token}` },\r\n    });\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: ORDER_DETAILS_FAIL, payload: message });\r\n  }\r\n};\r\n\r\nexport const listOrderMine = () => async (dispatch, getState) => {\r\n  dispatch({ type: ORDER_MINE_LIST_REQUEST });\r\n  const {\r\n    userSignin: { userInfo },\r\n  } = getState();\r\n  try {\r\n    const { data } = await Axios.get('/api/orders/mine', {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    });\r\n    dispatch({ type: ORDER_MINE_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({ type: ORDER_MINE_LIST_FAIL, payload: message });\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}